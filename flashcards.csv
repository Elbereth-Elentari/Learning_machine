Return a k length list of unique elements chosen from the population sequence or set.,"random.sample(population, k)",4
Shuffle the sequence x in place.,random.shuffle(x),4
Causes the resulting RE to match 1 or more repetitions of the preceding RE.,+,4
"Scan through string looking for the first location where the regular expression pattern produces a match, and return a corresponding match object.","re.search(pattern, string)",4
"An idealized time, independent of any particular day, assuming that every day has exactly 24*60*60 seconds (there is no notion of “leap seconds” here). Attributes: hour, minute, second, microsecond, and tzinfo.",datetime.time,4
"Return all non-overlapping matches of pattern in string, as a list of strings.","re.findall(pattern, string)",2
"A combination of a date and a time. Attributes: year, month, day, hour, minute, second, microsecond, and tzinfo.",datetime.datetime,4
Clear the regular expression cache.,re.purge(),4
printf-style for single character,%c,4
Return a new set with elements from the set and all others.,union(*others),4
Return a list of all the keys used in the dictionary d.,list(d),4
Matches any character which is not a whitespace character.,\S,4
"If zero or more characters at the beginning of string match the regular expression Pattern, return a corresponding match object.",Pattern.match(string),4
Add element elem to the set.,add(elem),4
"Compile a regular expression pattern into a regular expression object, which can be used for matching using its match(), search() and other methods, described below.",re.compile(),4
Remove element elem from the set if it is present.,discard(elem),4
The concatenation of the ascii_lowercase and ascii_uppercase constants.,string.ascii_letters,4
"Split string k at the first occurrence of m, and return a 3-tuple containing the part before the separator, the separator itself, and the part after the separator.",k.partition(m),4
"String of ASCII characters which are considered printable. This is a combination of digits, ascii_letters, punctuation, and whitespace.",string.printable,4
"Scan through string looking for the first location where this regular expression produces a match with Pattern, and return a corresponding match object.",Pattern.search(string),4
Return the string representing a character whose Unicode code point is the integer i.,chr(i),4
open a disk file for updating (reading and writing),+,4
Split string by the occurrences of pattern.,"re.split(pattern, string)",2
"Method sorting list s in place, in ascending order.","sort(s, reverse=False)",4
return an integer representing the Unicode code point of a character,ord(),4
"An abstract base class for time zone information objects. These are used by the datetime and time classes to provide a customizable notion of time adjustment (for example, to account for time zone and/or daylight saving time).",datetime.tzinfo,2
Matches Unicode whitespace characters (which includes [ \t\n\r\f\v],\s,4
printf-style for string,%s,4
"If zero or more characters at the beginning of string match the regular expression pattern, return a corresponding match object.","re.match(pattern, string)",4
The uppercase letters 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.,string.ascii_uppercase,4
Return a copy of string s in which each character has been mapped through the given translation table.,s.translate(),4
Return the number of items in the dictionary d.,len(d),4
"Return the next random floating point number in the range [0.0, 1.0).",random.random(),4
"Return the harmonic mean of data, a sequence or iterator of real-valued numbers.

The harmonic mean, sometimes called the subcontrary mean, is the reciprocal of the arithmetic mean() of the reciprocals of the data. For example, the harmonic mean of three values a, b and c will be equivalent to 3/(1/a + 1/b + 1/c).",statistics.harmonic_mean(data),4
"Return the median (middle value) of numeric data, using the common “mean of middle two” method.",statistics.median(data),4
"Return the most common data point from discrete or nominal data. The mode (when it exists) is the most typical value, and is a robust measure of central location.",statistics.mode(data),4
"Return the population variance of data, a non-empty iterable of real-valued numbers. Variance, or second moment about the mean, is a measure of the variability (spread or dispersion) of data. A large variance indicates that the data is spread out; a small variance indicates it is clustered closely around the mean.",statistics.pvariance(data),4
"Return the sample variance of data, an iterable of at least two real-valued numbers. Variance, or second moment about the mean, is a measure of the variability (spread or dispersion) of data. A large variance indicates that the data is spread out; a small variance indicates it is clustered closely around the mean.",statistics.variance(data),4
Return a reader object which will iterate over lines in the given csvfile.,csv.reader(csvfile),4
"Return a writer object responsible for converting the user’s data into delimited strings on the given file-like object. csvfile can be any object with a write() method. If csvfile is a file object, it should be opened with newline='' .",csv.writer(csvfile),4
"Return a list containing the names of the entries in the directory given by path. The list is in arbitrary order, and does not include the special entries '.' and '..' even if they are present in the directory.",os.listdir(path),4
Create a directory named path,os.mkdir(path),2
"Remove (delete) the file path. If path is a directory, an IsADirectoryError is raised.",os.remove(path),1
"Rename the file or directory src to dst. If dst is a directory, OSError will be raised. If dst exists and is a file, it will be replaced silently if the user has permission.","os.replace(src, dst)",4
Remove (delete) the directory path.,os.rmdir(path),4
Serialize obj as a JSON formatted stream to fp (a .write()-supporting file-like object),"json.dump(obj, fp)",2
Serialize obj to a JSON formatted str,json.dumps(obj),4
Deserialize fp (a .read()-supporting text file or binary file containing a JSON document) to a Python object,json.load(fp),2
"Deserialize s (a str, bytes or bytearray instance containing a JSON document) to a Python object",json.loads(s),4
The Tk class is instantiated without arguments. This creates a toplevel widget of Tk which usually is the main window of an application. Each instance has its own associated Tcl interpreter.,tkinter.Tk(),4
Text widget with a vertical scroll bar built in.,tkinter.scrolledtext,2
Dialog to let the user choose a color.,tkinter.colorchooser,4
Common dialogs to allow the user to specify a file to open or save.,tkinter.filedialog,4
Access to standard Tk dialog boxes.,tkinter.messagebox,2
Drag-and-drop support for tkinter. This is experimental and should become deprecated when it is replaced with the Tk DND.,tkinter.dnd,2
Turtle graphics in a Tk window.,turtle,2
"Used to communicate with horizontal scrollbars.

When the view in the widget’s window change, the widget will generate a Tcl command based on the scrollcommand.

Usually this option consists of the method Scrollbar.set() of some scrollbar. This will cause the scrollbar to be updated whenever the view in the window changes.",xscrollcommand,2
Used to communicate with vertical scrollbars.,yscrollcommand,4
Specifies a name whose value will be used in place of the text option resource.,textvariable,4
Specifies an image to display.,image,4
"Specifies how to display the image relative to the text, in the case both text and images options are present. Valid values are:

text: display text only

image: display image only

top, bottom, left, right: display image above, below, left of, or right of the text, respectively.

none: the default. display the image if present, otherwise the text.",compound,4
Widget has keyboard focus,focus,4
Widget is being pressed,pressed,4
"“On”, “true”, or “current” for things like Checkbuttons and radiobuttons",selected,4
"Windows and Mac have a notion of an “active” or foreground window. The background state is set for widgets in a background window, and cleared for those in the foreground window",background,4
Widget should not allow user modification,readonly,4
A widget-specific alternate display format,alternate,4
The widget’s value is invalid,invalid,4
"Returns the name of the element at position x y, or the empty string if the point does not lie within any element.

x and y are pixel coordinates relative to the widget.","identify(x, y)",1
"Test the widget’s state. If a callback is not specified, returns True if the widget state matches statespec and False otherwise.",instate(statespec),2
"Modify or inquire widget state. If statespec is specified, sets the widget state according to it and return a new statespec indicating which flags were changed. If statespec is not specified, returns the currently-enabled state flags.

statespec will usually be a list or a tuple.",state(statespec),4
"represents the preparation needed to perform one or more tests, and any associate cleanup actions. This may involve, for example, creating temporary or proxy databases, directories, or starting a server process.",test fixture,4
"the individual unit of testing. It checks for a specific response to a particular set of inputs. unittest provides a base class, TestCase, which may be used to create new test cases.",test case,0
"a collection of test cases, test suites, or both. It is used to aggregate tests that should be executed together.",test suite,0
"a component which orchestrates the execution of tests and provides the outcome to the user. The runner may use a graphical interface, a textual interface, or return a special value to indicate the results of executing the tests.",test runner,4
"Instances of the TestCase class represent the logical test units in the unittest universe. This class is intended to be used as a base class, with specific tests being implemented by concrete subclasses. This class implements the interface needed by the test runner to allow it to drive the tests, and methods that the test code can use to check for and report various kinds of failure.

Each instance of TestCase will run a single base method: the method named methodName. In most uses of TestCase, you will neither change the methodName nor reimplement the default runTest() method.

Changed in version 3.2: TestCase can be instantiated successfully without providing a methodName. This makes it easier to experiment with TestCase from the interactive interpreter.

TestCase instances provide three groups of methods: one group used to run the test, another used by the test implementation to check conditions and report failures, and some inquiry methods allowing information about the test itself to be gathered.",unittest.TestCase(),4
"Method called to prepare the test fixture. This is called immediately before calling the test method; other than AssertionError or SkipTest, any exception raised by this method will be considered an error rather than a test failure. The default implementation does nothing.",setUp(),4
"Method called immediately after the test method has been called and the result recorded. This is called even if the test method raised an exception, so the implementation in subclasses may need to be particularly careful about checking internal state. Any exception, other than AssertionError or SkipTest, raised by this method will be considered an additional error rather than a test failure (thus increasing the total number of reported errors). This method will only be called if the setUp() succeeds, regardless of the outcome of the test method. The default implementation does nothing.",tearDown(),4
A class method called before tests in an individual class are run.,setUpClass(),1
A class method called after tests in an individual class have run.,tearDownClass(),2
"Run the test, collecting the result into the TestResult object passed as result. If result is omitted or None, a temporary result object is created (by calling the defaultTestResult() method) and used. The result object is returned to run()’s caller.

The same effect may be had by simply calling the TestCase instance.",run(result),1
Calling this during a test method or setUp() skips the current test.,skipTest(reason),2
Return a context manager which executes the enclosed code block as a subtest.,subTest(),2
"Run the test without collecting the result. This allows exceptions raised by the test to be propagated to the caller, and can be used to support running tests under a debugger.",debug(),4
"Test that first and second are equal. If the values do not compare equal, the test will fail.

In addition, if first and second are the exact same type and one of list, tuple, dict, set, frozenset or str or any type that a subclass registers with addTypeEqualityFunc() the type-specific equality function will be called in order to generate a more useful default error message (see also the list of type-specific methods).","assertEqual(first, second)",4
"Test that first and second are not equal. If the values do compare equal, the test will fail.","assertNotEqual(first, second)",4
Test that expr is true.,assertTrue(expr),4
Test that expr is false.,assertFalse(expr),2
Test that first and second evaluate to the same object.,"assertIs(first, second)",4
Test that first and second don’t evaluate to the same object.,"assertIsNot(first, second)",4
Test that expr is None.,assertIsNone(expr),2
Test that expr is not None.,assertIsNotNone(expr),2
Test that first is in second.,"assertIn(first, second)",1
Test that first is not in second.,"assertNotIn(first, second)",2
"Test that obj is an instance of cls (which can be a class or a tuple of classes, as supported by isinstance()). To check for the exact type, use assertIs(type(obj), cls).","assertIsInstance(obj, cls)",2
"Test that obj is not an instance of cls (which can be a class or a tuple of classes, as supported by isinstance()). To check for the exact type, use assertIs(type(obj), cls).","assertNotIsInstance(obj, cls)",0
"Test that an exception is raised when callable is called with any positional or keyword arguments that are also passed to assertRaises(). The test passes if exception is raised, is an error if another exception is raised, or fails if no exception is raised. To catch any of a group of exceptions, a tuple containing the exception classes may be passed as exception.","assertRaises(exception, callable)",0
"Test that a warning is triggered when callable is called with any positional or keyword arguments that are also passed to assertWarns(). The test passes if warning is triggered and fails if it isn’t. Any exception is an error. To catch any of a group of warnings, a tuple containing the warning classes may be passed as warnings.","assertWarns(warning, callable)",2
Import BeautifulSoup.,from bs4 import BeautifulSoup,2
Parse html_doc into a soup object.,"soup = BeautifulSoup(html_doc, ""html.parser"")",0
Return a list of all tags a in soup.,"soup.find_all(""a"")",2
Return the first instance of tag id equal to link3.,"soup.find(id=""link3"")",2
Return the value of the first href tag.,"link.get(""href"")",1
Return text from soup.,soup.get_text(),1
Return a dictionary with all attributes of tag.,tag.attrs,0
"Return a list of all tags p with a value title within the tag, in soup.","soup.find_all(""p"", ""title"")",2
"Return a list of all tags with value link2 for argument id, in soup.","soup.find_all(id=""link2"")",2
"Return a list of all tags a with value sister for a class, in soup.","soup.find_all(""a"", class_=""sister"")",2
"Return a list of all p tags with css class values strikeout and body, in css_soup.","css_soup.select(""p.strikeout.body"")",2
Import webdriver.,from selenium import webdriver,2
Create an instance of Firefox WebDriver.,driver = webdriver.Firefox(),2
navigate to a page given by url,"driver.get(""url"")",2
"Close the browser window if there was only one tab. If there was more than one tab, the command will close only the tab.",driver.close(),2
Close the browser window irrespective of the number of tabs.,driver.quit(),2
Import the Keys class.,from selenium.webdriver.common.keys import Keys,0
"Enter ""some text"" into a text field.","element.send_keys(""some text"")",2
"Enter "" and some"" into a text field, and simulate pressing the arrow down key.","element.send_keys("" and some"", Keys.ARROW_DOWN)",2
clear the contents of a text field or textarea,element.clear(),0
Click a button.,button.click(),0
Import Select,from selenium.webdriver.support.ui import Select,0
"Find an element with a list to select, called ""name""","select = Select(driver.find_element_by_name(""name""))",0
Select the option with the index number index.,select.select_by_index(index),0
"Select the option with visible text ""text"".","select.select_by_visible_text(""text"")",0
"Select the option with the value ""value"".",select.select_by_value(value),0
Deselect all selected options.,select.deselect_all(),0
Returns a list of all selected options.,select.all_selected_options,0
Returns a list of all available options.,select.options,0
Submit an element from a form.,element.submit(),0
"Move to window ""windowName"".","driver.switch_to_window(""windowName"")",0
"Move to frame ""frameName"".","driver.switch_to_frame(""frameName"")",0
Go back to the main frame.,driver.switch_to_default_content(),0
